// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.mcel2.web;

import com.mcel2.domain.Accer;
import com.mcel2.domain.Accesories;
import com.mcel2.domain.Contract;
import com.mcel2.domain.Customer;
import com.mcel2.domain.CustomerAddress;
import com.mcel2.domain.Failures;
import com.mcel2.domain.PossibleFailures;
import com.mcel2.domain.PossibleFailuresType;
import com.mcel2.domain.Product;
import com.mcel2.domain.ProductBrand;
import com.mcel2.domain.ProductColor;
import com.mcel2.domain.ProductCosmeticState;
import com.mcel2.domain.ProductFamily;
import com.mcel2.domain.ProductSubFamily;
import com.mcel2.domain.ServiceOrder;
import com.mcel2.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Accer, String> ApplicationConversionServiceFactoryBean.getAccerToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mcel2.domain.Accer, java.lang.String>() {
            public String convert(Accer accer) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, Accer> ApplicationConversionServiceFactoryBean.getIdToAccerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mcel2.domain.Accer>() {
            public com.mcel2.domain.Accer convert(java.lang.Long id) {
                return Accer.findAccer(id);
            }
        };
    }
    
    public Converter<String, Accer> ApplicationConversionServiceFactoryBean.getStringToAccerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mcel2.domain.Accer>() {
            public com.mcel2.domain.Accer convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Accer.class);
            }
        };
    }
    
    public Converter<Accesories, String> ApplicationConversionServiceFactoryBean.getAccesoriesToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mcel2.domain.Accesories, java.lang.String>() {
            public String convert(Accesories accesories) {
                return new StringBuilder().append(accesories.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Accesories> ApplicationConversionServiceFactoryBean.getIdToAccesoriesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mcel2.domain.Accesories>() {
            public com.mcel2.domain.Accesories convert(java.lang.Long id) {
                return Accesories.findAccesories(id);
            }
        };
    }
    
    public Converter<String, Accesories> ApplicationConversionServiceFactoryBean.getStringToAccesoriesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mcel2.domain.Accesories>() {
            public com.mcel2.domain.Accesories convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Accesories.class);
            }
        };
    }
    
    public Converter<Contract, String> ApplicationConversionServiceFactoryBean.getContractToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mcel2.domain.Contract, java.lang.String>() {
            public String convert(Contract contract) {
                return new StringBuilder().append(contract.getSerialNumber()).toString();
            }
        };
    }
    
    public Converter<Long, Contract> ApplicationConversionServiceFactoryBean.getIdToContractConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mcel2.domain.Contract>() {
            public com.mcel2.domain.Contract convert(java.lang.Long id) {
                return Contract.findContract(id);
            }
        };
    }
    
    public Converter<String, Contract> ApplicationConversionServiceFactoryBean.getStringToContractConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mcel2.domain.Contract>() {
            public com.mcel2.domain.Contract convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Contract.class);
            }
        };
    }
    
    public Converter<Customer, String> ApplicationConversionServiceFactoryBean.getCustomerToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mcel2.domain.Customer, java.lang.String>() {
            public String convert(Customer customer) {
                return new StringBuilder().append(customer.getName()).append(' ').append(customer.getPhone()).append(' ').append(customer.getEmail()).toString();
            }
        };
    }
    
    public Converter<Long, Customer> ApplicationConversionServiceFactoryBean.getIdToCustomerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mcel2.domain.Customer>() {
            public com.mcel2.domain.Customer convert(java.lang.Long id) {
                return Customer.findCustomer(id);
            }
        };
    }
    
    public Converter<String, Customer> ApplicationConversionServiceFactoryBean.getStringToCustomerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mcel2.domain.Customer>() {
            public com.mcel2.domain.Customer convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Customer.class);
            }
        };
    }
    
    public Converter<CustomerAddress, String> ApplicationConversionServiceFactoryBean.getCustomerAddressToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mcel2.domain.CustomerAddress, java.lang.String>() {
            public String convert(CustomerAddress customerAddress) {
                return new StringBuilder().append(customerAddress.getStreet()).append(' ').append(customerAddress.getZipCode()).append(' ').append(customerAddress.getAddressReferences()).append(' ').append(customerAddress.getIntNumber()).toString();
            }
        };
    }
    
    public Converter<Long, CustomerAddress> ApplicationConversionServiceFactoryBean.getIdToCustomerAddressConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mcel2.domain.CustomerAddress>() {
            public com.mcel2.domain.CustomerAddress convert(java.lang.Long id) {
                return CustomerAddress.findCustomerAddress(id);
            }
        };
    }
    
    public Converter<String, CustomerAddress> ApplicationConversionServiceFactoryBean.getStringToCustomerAddressConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mcel2.domain.CustomerAddress>() {
            public com.mcel2.domain.CustomerAddress convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), CustomerAddress.class);
            }
        };
    }
    
    public Converter<Failures, String> ApplicationConversionServiceFactoryBean.getFailuresToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mcel2.domain.Failures, java.lang.String>() {
            public String convert(Failures failures) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, Failures> ApplicationConversionServiceFactoryBean.getIdToFailuresConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mcel2.domain.Failures>() {
            public com.mcel2.domain.Failures convert(java.lang.Long id) {
                return Failures.findFailures(id);
            }
        };
    }
    
    public Converter<String, Failures> ApplicationConversionServiceFactoryBean.getStringToFailuresConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mcel2.domain.Failures>() {
            public com.mcel2.domain.Failures convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Failures.class);
            }
        };
    }
    
    public Converter<PossibleFailures, String> ApplicationConversionServiceFactoryBean.getPossibleFailuresToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mcel2.domain.PossibleFailures, java.lang.String>() {
            public String convert(PossibleFailures possibleFailures) {
                return new StringBuilder().append(possibleFailures.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, PossibleFailures> ApplicationConversionServiceFactoryBean.getIdToPossibleFailuresConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mcel2.domain.PossibleFailures>() {
            public com.mcel2.domain.PossibleFailures convert(java.lang.Long id) {
                return PossibleFailures.findPossibleFailures(id);
            }
        };
    }
    
    public Converter<String, PossibleFailures> ApplicationConversionServiceFactoryBean.getStringToPossibleFailuresConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mcel2.domain.PossibleFailures>() {
            public com.mcel2.domain.PossibleFailures convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PossibleFailures.class);
            }
        };
    }
    
    public Converter<PossibleFailuresType, String> ApplicationConversionServiceFactoryBean.getPossibleFailuresTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mcel2.domain.PossibleFailuresType, java.lang.String>() {
            public String convert(PossibleFailuresType possibleFailuresType) {
                return new StringBuilder().append(possibleFailuresType.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, PossibleFailuresType> ApplicationConversionServiceFactoryBean.getIdToPossibleFailuresTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mcel2.domain.PossibleFailuresType>() {
            public com.mcel2.domain.PossibleFailuresType convert(java.lang.Long id) {
                return PossibleFailuresType.findPossibleFailuresType(id);
            }
        };
    }
    
    public Converter<String, PossibleFailuresType> ApplicationConversionServiceFactoryBean.getStringToPossibleFailuresTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mcel2.domain.PossibleFailuresType>() {
            public com.mcel2.domain.PossibleFailuresType convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PossibleFailuresType.class);
            }
        };
    }
    
    public Converter<Product, String> ApplicationConversionServiceFactoryBean.getProductToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mcel2.domain.Product, java.lang.String>() {
            public String convert(Product product) {
                return new StringBuilder().append(product.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Product> ApplicationConversionServiceFactoryBean.getIdToProductConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mcel2.domain.Product>() {
            public com.mcel2.domain.Product convert(java.lang.Long id) {
                return Product.findProduct(id);
            }
        };
    }
    
    public Converter<String, Product> ApplicationConversionServiceFactoryBean.getStringToProductConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mcel2.domain.Product>() {
            public com.mcel2.domain.Product convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Product.class);
            }
        };
    }
    
    public Converter<ProductBrand, String> ApplicationConversionServiceFactoryBean.getProductBrandToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mcel2.domain.ProductBrand, java.lang.String>() {
            public String convert(ProductBrand productBrand) {
                return new StringBuilder().append(productBrand.getName()).toString();
            }
        };
    }
    
    public Converter<Long, ProductBrand> ApplicationConversionServiceFactoryBean.getIdToProductBrandConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mcel2.domain.ProductBrand>() {
            public com.mcel2.domain.ProductBrand convert(java.lang.Long id) {
                return ProductBrand.findProductBrand(id);
            }
        };
    }
    
    public Converter<String, ProductBrand> ApplicationConversionServiceFactoryBean.getStringToProductBrandConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mcel2.domain.ProductBrand>() {
            public com.mcel2.domain.ProductBrand convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ProductBrand.class);
            }
        };
    }
    
    public Converter<ProductColor, String> ApplicationConversionServiceFactoryBean.getProductColorToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mcel2.domain.ProductColor, java.lang.String>() {
            public String convert(ProductColor productColor) {
                return new StringBuilder().append(productColor.getColor()).toString();
            }
        };
    }
    
    public Converter<Long, ProductColor> ApplicationConversionServiceFactoryBean.getIdToProductColorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mcel2.domain.ProductColor>() {
            public com.mcel2.domain.ProductColor convert(java.lang.Long id) {
                return ProductColor.findProductColor(id);
            }
        };
    }
    
    public Converter<String, ProductColor> ApplicationConversionServiceFactoryBean.getStringToProductColorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mcel2.domain.ProductColor>() {
            public com.mcel2.domain.ProductColor convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ProductColor.class);
            }
        };
    }
    
    public Converter<ProductCosmeticState, String> ApplicationConversionServiceFactoryBean.getProductCosmeticStateToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mcel2.domain.ProductCosmeticState, java.lang.String>() {
            public String convert(ProductCosmeticState productCosmeticState) {
                return new StringBuilder().append(productCosmeticState.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, ProductCosmeticState> ApplicationConversionServiceFactoryBean.getIdToProductCosmeticStateConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mcel2.domain.ProductCosmeticState>() {
            public com.mcel2.domain.ProductCosmeticState convert(java.lang.Long id) {
                return ProductCosmeticState.findProductCosmeticState(id);
            }
        };
    }
    
    public Converter<String, ProductCosmeticState> ApplicationConversionServiceFactoryBean.getStringToProductCosmeticStateConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mcel2.domain.ProductCosmeticState>() {
            public com.mcel2.domain.ProductCosmeticState convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ProductCosmeticState.class);
            }
        };
    }
    
    public Converter<ProductFamily, String> ApplicationConversionServiceFactoryBean.getProductFamilyToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mcel2.domain.ProductFamily, java.lang.String>() {
            public String convert(ProductFamily productFamily) {
                return new StringBuilder().append(productFamily.getName()).toString();
            }
        };
    }
    
    public Converter<Long, ProductFamily> ApplicationConversionServiceFactoryBean.getIdToProductFamilyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mcel2.domain.ProductFamily>() {
            public com.mcel2.domain.ProductFamily convert(java.lang.Long id) {
                return ProductFamily.findProductFamily(id);
            }
        };
    }
    
    public Converter<String, ProductFamily> ApplicationConversionServiceFactoryBean.getStringToProductFamilyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mcel2.domain.ProductFamily>() {
            public com.mcel2.domain.ProductFamily convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ProductFamily.class);
            }
        };
    }
    
    public Converter<ProductSubFamily, String> ApplicationConversionServiceFactoryBean.getProductSubFamilyToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mcel2.domain.ProductSubFamily, java.lang.String>() {
            public String convert(ProductSubFamily productSubFamily) {
                return new StringBuilder().append(productSubFamily.getName()).toString();
            }
        };
    }
    
    public Converter<Long, ProductSubFamily> ApplicationConversionServiceFactoryBean.getIdToProductSubFamilyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mcel2.domain.ProductSubFamily>() {
            public com.mcel2.domain.ProductSubFamily convert(java.lang.Long id) {
                return ProductSubFamily.findProductSubFamily(id);
            }
        };
    }
    
    public Converter<String, ProductSubFamily> ApplicationConversionServiceFactoryBean.getStringToProductSubFamilyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mcel2.domain.ProductSubFamily>() {
            public com.mcel2.domain.ProductSubFamily convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ProductSubFamily.class);
            }
        };
    }
    
    public Converter<ServiceOrder, String> ApplicationConversionServiceFactoryBean.getServiceOrderToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mcel2.domain.ServiceOrder, java.lang.String>() {
            public String convert(ServiceOrder serviceOrder) {
                return new StringBuilder().append(serviceOrder.getSerialNumber()).append(' ').append(serviceOrder.getObservations()).append(' ').append(serviceOrder.getFrontDeskTicket()).toString();
            }
        };
    }
    
    public Converter<Long, ServiceOrder> ApplicationConversionServiceFactoryBean.getIdToServiceOrderConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mcel2.domain.ServiceOrder>() {
            public com.mcel2.domain.ServiceOrder convert(java.lang.Long id) {
                return ServiceOrder.findServiceOrder(id);
            }
        };
    }
    
    public Converter<String, ServiceOrder> ApplicationConversionServiceFactoryBean.getStringToServiceOrderConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mcel2.domain.ServiceOrder>() {
            public com.mcel2.domain.ServiceOrder convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ServiceOrder.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAccerToStringConverter());
        registry.addConverter(getIdToAccerConverter());
        registry.addConverter(getStringToAccerConverter());
        registry.addConverter(getAccesoriesToStringConverter());
        registry.addConverter(getIdToAccesoriesConverter());
        registry.addConverter(getStringToAccesoriesConverter());
        registry.addConverter(getContractToStringConverter());
        registry.addConverter(getIdToContractConverter());
        registry.addConverter(getStringToContractConverter());
        registry.addConverter(getCustomerToStringConverter());
        registry.addConverter(getIdToCustomerConverter());
        registry.addConverter(getStringToCustomerConverter());
        registry.addConverter(getCustomerAddressToStringConverter());
        registry.addConverter(getIdToCustomerAddressConverter());
        registry.addConverter(getStringToCustomerAddressConverter());
        registry.addConverter(getFailuresToStringConverter());
        registry.addConverter(getIdToFailuresConverter());
        registry.addConverter(getStringToFailuresConverter());
        registry.addConverter(getPossibleFailuresToStringConverter());
        registry.addConverter(getIdToPossibleFailuresConverter());
        registry.addConverter(getStringToPossibleFailuresConverter());
        registry.addConverter(getPossibleFailuresTypeToStringConverter());
        registry.addConverter(getIdToPossibleFailuresTypeConverter());
        registry.addConverter(getStringToPossibleFailuresTypeConverter());
        registry.addConverter(getProductToStringConverter());
        registry.addConverter(getIdToProductConverter());
        registry.addConverter(getStringToProductConverter());
        registry.addConverter(getProductBrandToStringConverter());
        registry.addConverter(getIdToProductBrandConverter());
        registry.addConverter(getStringToProductBrandConverter());
        registry.addConverter(getProductColorToStringConverter());
        registry.addConverter(getIdToProductColorConverter());
        registry.addConverter(getStringToProductColorConverter());
        registry.addConverter(getProductCosmeticStateToStringConverter());
        registry.addConverter(getIdToProductCosmeticStateConverter());
        registry.addConverter(getStringToProductCosmeticStateConverter());
        registry.addConverter(getProductFamilyToStringConverter());
        registry.addConverter(getIdToProductFamilyConverter());
        registry.addConverter(getStringToProductFamilyConverter());
        registry.addConverter(getProductSubFamilyToStringConverter());
        registry.addConverter(getIdToProductSubFamilyConverter());
        registry.addConverter(getStringToProductSubFamilyConverter());
        registry.addConverter(getServiceOrderToStringConverter());
        registry.addConverter(getIdToServiceOrderConverter());
        registry.addConverter(getStringToServiceOrderConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
